module Math;

public static const float PI = 3.14159265359;

public float2 SampleSpherical(float3 v)
{
    let inv_atan = float2(0.1591, 0.3183);
    var uv = float2(atan2(v.z, v.x), asin(v.y));
    uv *= inv_atan;
    uv += 0.5;
    return uv;
}

public float3 Reinhard(float3 x)
{
    return x / (1.0 + x);
}

public float2 SamplePoisson(uint index)
{
    static const float2[64] poisson = {
        float2(-0.884081, 0.124488),
        float2(-0.714377, 0.027940),
        float2(-0.747945, 0.227922),
        float2(-0.939609, 0.243634),
        float2(-0.985465, 0.045534),
        float2(-0.861367, -0.136222),
        float2(-0.881934, 0.396908),
        float2(-0.466938, 0.014526),
        float2(-0.558207, 0.212662),
        float2(-0.578447, -0.095822),
        float2(-0.740266, -0.095631),
        float2(-0.751681, 0.472604),
        float2(-0.553147, -0.243177),
        float2(-0.674762, -0.330730),
        float2(-0.402765, -0.122087),
        float2(-0.319776, -0.312166),
        float2(-0.413923, -0.439757),
        float2(-0.979153, -0.201245),
        float2(-0.865579, -0.288695),
        float2(-0.243704, -0.186378),
        float2(-0.294920, -0.055748),
        float2(-0.604452, -0.544251),
        float2(-0.418056, -0.587679),
        float2(-0.549156, -0.415877),
        float2(-0.238080, -0.611761),
        float2(-0.267004, -0.459702),
        float2(-0.100006, -0.229116),
        float2(-0.101928, -0.380382),
        float2(-0.681467, -0.700773),
        float2(-0.763488, -0.543386),
        float2(-0.549030, -0.750749),
        float2(-0.809045, -0.408738),
        float2(-0.388134, -0.773448),
        float2(-0.429392, -0.894892),
        float2(-0.131597, 0.065058),
        float2(-0.275002, 0.102922),
        float2(-0.106117, -0.068327),
        float2(-0.294586, -0.891515),
        float2(-0.629418, 0.379387),
        float2(-0.407257, 0.339748),
        float2(0.071650, -0.384284),
        float2(0.022018, -0.263793),
        float2(0.003879, -0.136073),
        float2(-0.137533, -0.767844),
        float2(-0.050874, -0.906068),
        float2(0.114133, -0.070053),
        float2(0.163314, -0.217231),
        float2(-0.100262, -0.587992),
        float2(-0.004942, 0.125368),
        float2(0.035302, -0.619310),
        float2(0.195646, -0.459022),
        float2(0.303969, -0.346362),
        float2(-0.678118, 0.685099),
        float2(-0.628418, 0.507978),
        float2(-0.508473, 0.458753),
        float2(0.032134, -0.782030),
        float2(0.122595, 0.280353),
        float2(-0.043643, 0.312119),
        float2(0.132993, 0.085170),
        float2(-0.192106, 0.285848),
        float2(0.183621, -0.713242),
        float2(0.265220, -0.596716),
        float2(-0.009628, -0.483058),
        float2(-0.018516, 0.435703)
    };
    return poisson[index % 64];
}

