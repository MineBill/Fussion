name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_c:
    name: C, C++
    strategy:
      matrix:
        build_type: [ Release, Debug ]
        os: [ ubuntu-22.04, windows-2022, macos-12 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Configure
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.build_type }}

  build_c_so:
    name: C, C++ Shared Library
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-12 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Configure
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config Release

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C Release

  build_32bit:
    name: Linux 32-bit
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: Release
      CFLAGS: "-m32"
      CXXFLAGS: "-m32"
      LDFLAGS: "-m32"
    steps:
    - name: Install Multilib support
      run: sudo apt-get install -y gcc-multilib g++-multilib

    - uses: actions/checkout@v3

    - name: Configure
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config $BUILD_TYPE

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C $BUILD_TYPE


  build_cython:
    name: Python
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheel
      run: |
        python -m pip install --upgrade pip build
        python -m build -w
    - name: Install wheel
      run: python -m pip install dist/*.whl
    - name: Test
      run: python bindings/python/tests/ckdl_test.py
